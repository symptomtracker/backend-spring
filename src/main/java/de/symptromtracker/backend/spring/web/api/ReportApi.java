/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.symptromtracker.backend.spring.web.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-03-28T11:39:20.954440+01:00[Europe/Berlin]")

@Validated
@Api(value = "report", description = "the report API")
public interface ReportApi {

    default ReportApiDelegate getDelegate() {
        return new ReportApiDelegate() {};
    }

    /**
     * GET /report : generate report
     *
     * @return Response (status code 200)
     */
    @ApiOperation(value = "generate report", nickname = "getReport", notes = "", authorizations = {
        @Authorization(value = "oauth", scopes = {
            @AuthorizationScope(scope = "jhipster", description = "Jhipster specific claims"),
            @AuthorizationScope(scope = "email", description = "Email claims"),
            @AuthorizationScope(scope = "profile", description = "Profile claims")
            }),
        @Authorization(value = "openId")
    }, tags={ "report", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Response") })
    @RequestMapping(value = "/report",
        method = RequestMethod.GET)
    default ResponseEntity<Void> getReport() {
        return getDelegate().getReport();
    }

}
