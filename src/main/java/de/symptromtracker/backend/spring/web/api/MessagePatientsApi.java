/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package de.symptromtracker.backend.spring.web.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.List;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-03-28T11:39:20.954440+01:00[Europe/Berlin]")

@Validated
@Api(value = "messagePatients", description = "the messagePatients API")
public interface MessagePatientsApi {

    default MessagePatientsApiDelegate getDelegate() {
        return new MessagePatientsApiDelegate() {};
    }

    /**
     * POST /messagePatients : send email to list of patients specified by list of id
     *
     * @param ids list of patient ids (required)
     * @return sending has been successful (status code 204)
     */
    @ApiOperation(value = "send email to list of patients specified by list of id", nickname = "messagePatients", notes = "", authorizations = {
        @Authorization(value = "oauth", scopes = {
            @AuthorizationScope(scope = "jhipster", description = "Jhipster specific claims"),
            @AuthorizationScope(scope = "email", description = "Email claims"),
            @AuthorizationScope(scope = "profile", description = "Profile claims")
            }),
        @Authorization(value = "openId")
    }, tags={ "message", })
    @ApiResponses(value = {
        @ApiResponse(code = 204, message = "sending has been successful") })
    @RequestMapping(value = "/messagePatients",
        method = RequestMethod.POST)
    default ResponseEntity<Void> messagePatients(@NotNull @ApiParam(value = "list of patient ids", required = true) @Valid @RequestParam(value = "_ids", required = true) List<Integer> ids) {
        return getDelegate().messagePatients(ids);
    }

}
